name: "Publish Python \U0001F40D distribution \U0001F4E6 to PyPI and TestPyPI"
'on': push
jobs:
  publish-to-testpypi:
    if: 'startsWith(github.ref, ''refs/tags/test'') && contains(github.ref, ''test'')'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.17
        with:
          pypi_token: '${{ secrets.TEST_PYPI_TOKEN }}'
          repository_name: firedantic-mixin
          repository_url: 'https://test.pypi.org/legacy/'
  publish-to-pypi:
    if: 'startsWith(github.ref, ''refs/tags/'') && contains(github.ref, ''v'') && !contains(github.ref, ''test'')'
    runs-on: ubuntu-latest
    permissions:
        contents: write
        id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.17
        with:
          pypi_token: '${{ secrets.PYPI_TOKEN }}'
          repository_name: firedantic-mixin
    #  - name: Download all the dists
    #    uses: actions/download-artifact@v3
    #    with:
    #      path: dist/
      - name: check directory
        run: >-
            mkdir dist2 && cp dist/* dist2/ ;
            ls -l ;
            ls -l dist ; 
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: ./dist2/*.tar.gz ./dist2/*.whl
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: '${{ github.token }}'
        run: >-
          gh release create '${{ github.ref_name }}' --generate-notes -d dist2/** --repo '${{github.repository }}'


